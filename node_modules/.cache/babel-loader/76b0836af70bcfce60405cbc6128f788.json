{"ast":null,"code":"var _jsxFileName = \"/Users/afganaskarli/PycharmProjects/buf/src/ProtobufDisplay.js\";\nimport React, { Fragment } from \"react\";\nimport ProtobufPart from \"./ProtobufPart\";\nimport { Table } from \"semantic-ui-react\";\nimport { bufferToPrettyHex } from \"./hexUtils\";\n\nfunction ProtobufDisplay(props) {\n  const value = props.value;\n  const parts = value.parts.map((part, i) => {\n    return React.createElement(ProtobufPart, {\n      key: i,\n      part: part,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  });\n  const leftOver = value.leftOver.length ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Left over bytes: \", bufferToPrettyHex(value.leftOver)) : null;\n  return {\n    parts\n  };\n}\n\nexport default ProtobufDisplay;","map":{"version":3,"sources":["/Users/afganaskarli/PycharmProjects/buf/src/ProtobufDisplay.js"],"names":["React","Fragment","ProtobufPart","Table","bufferToPrettyHex","ProtobufDisplay","props","value","parts","map","part","i","leftOver","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,QACtBC,KADsB,GACZD,KADY,CACtBC,KADsB;AAG9B,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzC,WAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAnB;AAAsB,MAAA,IAAI,EAAED,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFa,CAAd;AAIA,QAAME,QAAQ,GAAGL,KAAK,CAACK,QAAN,CAAeC,MAAf,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBT,iBAAiB,CAACG,KAAK,CAACK,QAAP,CAAtC,CADe,GAEb,IAFJ;AAIA,SAIM;AAACJ,IAAAA;AAAD,GAJN;AASD;;AAED,eAAeH,eAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport ProtobufPart from \"./ProtobufPart\";\nimport { Table } from \"semantic-ui-react\";\nimport { bufferToPrettyHex } from \"./hexUtils\";\n\nfunction ProtobufDisplay(props) {\n  const { value } = props;\n\n  const parts = value.parts.map((part, i) => {\n    return <ProtobufPart key={i} part={part} />;\n  });\n\n  const leftOver = value.leftOver.length ? (\n    <p>Left over bytes: {bufferToPrettyHex(value.leftOver)}</p>\n  ) : null;\n\n  return (\n\n\n\n        {parts}\n\n\n\n  );\n}\n\nexport default ProtobufDisplay;\n"]},"metadata":{},"sourceType":"module"}